name: Matrix
on: [ pull_request ]

jobs:
  setup_matrix:
    name: Setup Matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Configure matrix
        id: configure-matrix
        run: |
          echo "::set-output name=lint::$(yarn nx print-affected --base origin/main --target lint   |sed '$ d'|tail -n +3|jq '.tasks'|jq -c 'map(.target.project)')"
          echo "::set-output name=test::$(yarn nx print-affected --base origin/main --target test   |sed '$ d'|tail -n +3|jq '.tasks'|jq -c 'map(.target.project)')"
          echo "::set-output name=build::$(yarn nx print-affected --base origin/main --target build |sed '$ d'|tail -n +3|jq '.tasks'|jq -c 'map(.target.project)')"

    outputs:
      lint: ${{ steps.configure-matrix.outputs.lint }}
      test: ${{ steps.configure-matrix.outputs.test }}
      build: ${{ steps.configure-matrix.outputs.build }}
      lint_should_run: ${{ fromJson(steps.configure-matrix.outputs.lint)[0] }}
      test_should_run: ${{ fromJson(steps.configure-matrix.outputs.test)[0] }}
      build_should_run: ${{ fromJson(steps.configure-matrix.outputs.build)[0] }}

  lint:
    needs: setup_matrix
    runs-on: ubuntu-latest
    if: ${{ needs.setup_matrix.outputs.lint_should_run != '' }}
    strategy:
      matrix:
        project: ${{ fromJson( needs.setup_matrix.outputs.lint ) }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn nx run ${{ matrix.project }}:lint

  test:
    needs: setup_matrix
    runs-on: ubuntu-latest
    if: ${{ needs.setup_matrix.outputs.test_should_run != '' }}
    strategy:
      matrix:
        project: ${{ fromJson( needs.setup_matrix.outputs.test ) }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Test
        run: yarn nx run ${{ matrix.project }}:test

  build:
    needs: setup_matrix
    runs-on: ubuntu-latest
    if: ${{ needs.setup_matrix.outputs.build_should_run != '' }}
    strategy:
      matrix:
        project: ${{ fromJson( needs.setup_matrix.outputs.build ) }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn nx run ${{ matrix.project }}:build
