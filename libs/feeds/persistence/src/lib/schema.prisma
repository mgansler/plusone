datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  output          = "client"
  binaryTargets   = ["linux-musl", "native"]
}

enum Order {
  ASC
  DESC
}

model Article {
  id           String         @id @default(uuid()) @db.Uuid
  title        String?
  content      String?
  contentBody  String?
  guid         String
  link         String?
  date         DateTime       @default(now())
  feed         Feed           @relation(fields: [feedId], references: [id])
  feedId       String         @db.Uuid
  UserArticle  UserArticle[]
  RecentlyRead RecentlyRead[]

  @@unique([guid, feedId])
}

model Feed {
  id            String     @id @default(uuid()) @db.Uuid
  originalTitle String
  feedUrl       String     @unique
  articles      Article[]
  UserFeed      UserFeed[]
}

model User {
  id           String         @id @default(uuid()) @db.Uuid
  username     String         @unique
  password     String
  email        String?
  isAdmin      Boolean        @default(false)
  refreshToken String?
  UserFeed     UserFeed[]
  UserArticle  UserArticle[]
  UserTags     UserTag[]
  RecentlyRead RecentlyRead[]
}

model UserArticle {
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.Uuid
  article   Article @relation(fields: [articleId], references: [id])
  articleId String  @db.Uuid
  cursor    Int     @unique @default(autoincrement())
  unread    Boolean @default(true)
  starred   Boolean @default(false)

  @@unique([userId, articleId])
}

model UserFeed {
  id            String    @id @default(uuid()) @db.Uuid
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @db.Uuid
  feed          Feed      @relation(fields: [feedId], references: [id])
  feedId        String    @db.Uuid
  title         String
  order         Order     @default(DESC)
  includeRead   Boolean   @default(true)
  expandContent Boolean   @default(false)
  tags          UserTag[]

  @@unique([userId, feedId])
}

model UserTag {
  id       String     @id @default(uuid()) @db.Uuid
  name     String
  User     User       @relation(fields: [userId], references: [id])
  userId   String     @db.Uuid
  UserFeed UserFeed[]

  @@unique([userId, name])
}

model RecentlyRead {
  cursor    Int     @unique @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.Uuid
  article   Article @relation(fields: [articleId], references: [id])
  articleId String  @db.Uuid

  @@unique([userId, articleId])
}
