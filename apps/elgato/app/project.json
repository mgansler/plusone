{
  "name": "elgato-app",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/elgato/app",
  "projectType": "application",
  "targets": {
    "package": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["docker build -t ${DOCKER_IMAGE_NAME} -f apps/elgato/app/Dockerfile ."],
        "parallel": false
      },
      "configurations": {
        "ci": {
          "commands": [
            "docker build -t ${CI_REGISTRY_IMAGE}/elgato-app/${CI_COMMIT_REF_SLUG} -f apps/elgato/app/Dockerfile .",
            "docker push ${CI_REGISTRY_IMAGE}/elgato-app/${CI_COMMIT_REF_SLUG}:latest"
          ]
        },
        "macos": {
          "commands": ["docker buildx build --platform linux/arm64/v8 -t elgato-app -f apps/elgato/app/Dockerfile ."]
        }
      },
      "dependsOn": [
        {
          "target": "build",
          "dependencies": true
        }
      ]
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["docker compose -f apps/elgato/app/docker-compose.yml up -d --remove-orphans"],
        "parallel": false
      },
      "configurations": {
        "ci": {
          "commands": [
            "DOCKER_IMAGE_NAME=${CI_REGISTRY_IMAGE}/elgato-app/${CI_COMMIT_REF_SLUG} docker compose -f apps/elgato/app/docker-compose.yml pull",
            "DOCKER_IMAGE_NAME=${CI_REGISTRY_IMAGE}/elgato-app/${CI_COMMIT_REF_SLUG} docker compose -f apps/elgato/app/docker-compose.yml up -d --remove-orphans"
          ]
        }
      }
    }
  },
  "tags": ["nas"],
  "implicitDependencies": ["elgato-backend", "elgato-frontend"]
}
