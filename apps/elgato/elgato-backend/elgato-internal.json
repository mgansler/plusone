{
  "openapi": "3.0.0",
  "paths": {
    "/api/discovery/devices": {
      "get": {
        "operationId": "discovered-devices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of devices that have been discovered via bonjour at some point.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveredDevicesResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "discovery"
        ]
      }
    },
    "/api/discovery/add-by-id/{deviceId}": {
      "post": {
        "operationId": "add-discovered-device",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "discovery"
        ]
      }
    },
    "/api/discovery/add-by-address/{address}": {
      "post": {
        "operationId": "add-manual-device",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "discovery"
        ]
      }
    },
    "/api/devices": {
      "get": {
        "operationId": "device-list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all devices in the local network.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}": {
      "get": {
        "operationId": "device-details",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed information for the device with the given id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}/display-name": {
      "put": {
        "operationId": "set-display-name",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDisplayNameRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}/toggle": {
      "put": {
        "operationId": "toggle-device",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}/power-state": {
      "put": {
        "operationId": "device-set-power-state",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePowerStateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}/transition-to-color": {
      "put": {
        "operationId": "transition-to-color",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitionToColorRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "devices"
        ]
      }
    },
    "/api/devices/{macAddress}/settings": {
      "get": {
        "operationId": "current-device-settings",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns current settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSettingsResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "device-settings"
        ]
      },
      "patch": {
        "operationId": "update-device-settings",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns all current settings when successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSettingsResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "device-settings"
        ]
      }
    },
    "/api/health": {
      "get": {
        "operationId": "getHealthStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "health"
        ]
      }
    },
    "/api/location": {
      "post": {
        "operationId": "update-location",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Information that describe a location.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "location"
        ]
      },
      "get": {
        "operationId": "current-location",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "location"
        ]
      }
    },
    "/api/location/location-data": {
      "get": {
        "operationId": "get-location-data",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDataResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "location"
        ]
      }
    },
    "/api/public/apple-shortcuts/{hash}": {
      "post": {
        "operationId": "triggerAppleShortcutsCommand",
        "parameters": [
          {
            "name": "hash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command has been executed"
          },
          "404": {
            "description": "The provided command doesn't exist"
          }
        },
        "summary": "Trigger a predefined command via apple shortcuts.",
        "tags": [
          "public",
          "apple-shortcuts"
        ]
      }
    },
    "/api/public/stream-deck/toggle/{macAddress}": {
      "get": {
        "operationId": "toggle-device-power-state",
        "parameters": [
          {
            "name": "macAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Toggles devices on and off.",
        "tags": [
          "public",
          "stream-deck"
        ]
      }
    },
    "/api/commands": {
      "post": {
        "operationId": "createCommand",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "commands"
        ]
      },
      "get": {
        "operationId": "getCommands",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandsListResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "commands"
        ]
      }
    },
    "/api/commands/{commandId}": {
      "get": {
        "operationId": "getCommand",
        "parameters": [
          {
            "name": "commandId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponseDto"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "commands"
        ]
      },
      "put": {
        "operationId": "updateCommand",
        "parameters": [
          {
            "name": "commandId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "commands"
        ]
      },
      "delete": {
        "operationId": "deleteCommand",
        "parameters": [
          {
            "name": "commandId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "",
        "tags": [
          "internal",
          "commands"
        ]
      }
    }
  },
  "info": {
    "title": "Elgato API",
    "description": "",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "DeviceType": {
        "type": "string",
        "enum": [
          "RingLight",
          "LightStrip",
          "Unknown"
        ]
      },
      "DiscoveredDeviceResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The mac address of the device.",
            "example": "aa:bb:cc:dd:ee:ff"
          },
          "macAddress": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fqdn": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "ipv4": {
            "type": "string",
            "nullable": true,
            "example": "192.168.0.50"
          },
          "port": {
            "type": "number",
            "example": 9123
          },
          "displayName": {
            "type": "string",
            "example": "Elgato Ring Light be4f"
          },
          "productName": {
            "type": "string",
            "example": "Elgato Ring Light"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceType"
              }
            ]
          },
          "isControlled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "macAddress",
          "name",
          "fqdn",
          "host",
          "port",
          "displayName",
          "productName",
          "type",
          "isControlled"
        ]
      },
      "DiscoveredDevicesResponseDto": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveredDeviceResponseDto"
            }
          }
        },
        "required": [
          "devices"
        ]
      },
      "DeviceResponseDto": {
        "type": "object",
        "properties": {
          "macAddress": {
            "type": "string",
            "description": "The unique id for the device is its mac address."
          },
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "macAddress",
          "displayName"
        ]
      },
      "DeviceListResponseDto": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResponseDto"
            }
          }
        },
        "required": [
          "devices"
        ]
      },
      "ElgatoDeviceDetailsResponseDto": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string"
          },
          "deviceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceType"
              }
            ]
          },
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "productName",
          "deviceType",
          "displayName"
        ]
      },
      "DeviceState": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean"
          },
          "hue": {
            "type": "number",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "nullable": true
          },
          "brightness": {
            "type": "number",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "on"
        ]
      },
      "DeviceDetailsResponseDto": {
        "type": "object",
        "properties": {
          "macAddress": {
            "type": "string",
            "description": "The unique id for the device is its mac address."
          },
          "displayName": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ElgatoDeviceDetailsResponseDto"
          },
          "state": {
            "$ref": "#/components/schemas/DeviceState"
          },
          "lastSeen": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "macAddress",
          "displayName",
          "details",
          "state",
          "lastSeen"
        ]
      },
      "DeviceDisplayNameRequestDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "displayName"
        ]
      },
      "DevicePowerStateRequestDto": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean"
          },
          "hue": {
            "type": "number",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "nullable": true
          },
          "brightness": {
            "type": "number",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "on"
        ]
      },
      "TransitionToColorRequestDto": {
        "type": "object",
        "properties": {
          "hue": {
            "type": "number"
          },
          "saturation": {
            "type": "number"
          },
          "brightness": {
            "type": "number"
          }
        },
        "required": [
          "hue",
          "saturation",
          "brightness"
        ]
      },
      "DeviceSettingsResponseDto": {
        "type": "object",
        "properties": {
          "sunrise": {
            "type": "boolean"
          },
          "sunset": {
            "type": "boolean"
          }
        },
        "required": [
          "sunrise",
          "sunset"
        ]
      },
      "DeviceSettingsRequestDto": {
        "type": "object",
        "properties": {
          "sunrise": {
            "type": "boolean"
          },
          "sunset": {
            "type": "boolean"
          }
        }
      },
      "LocationUpdateRequestDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "longitude",
          "latitude",
          "name"
        ]
      },
      "LocationResponseDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "longitude",
          "latitude",
          "name"
        ]
      },
      "LocationDataResponseDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "sunrise": {
            "format": "date-time",
            "type": "string"
          },
          "sunset": {
            "format": "date-time",
            "type": "string"
          },
          "firstLight": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "lastLight": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "dawn": {
            "format": "date-time",
            "type": "string"
          },
          "dusk": {
            "format": "date-time",
            "type": "string"
          },
          "solarNoon": {
            "format": "date-time",
            "type": "string"
          },
          "goldenHour": {
            "format": "date-time",
            "type": "string"
          },
          "dayLength": {
            "type": "number",
            "description": "Time between sunrise and sunset in seconds."
          },
          "timeZone": {
            "type": "string"
          },
          "utcOffset": {
            "type": "number"
          }
        },
        "required": [
          "longitude",
          "latitude",
          "name",
          "sunrise",
          "sunset",
          "firstLight",
          "lastLight",
          "dawn",
          "dusk",
          "solarNoon",
          "goldenHour",
          "dayLength",
          "timeZone",
          "utcOffset"
        ]
      },
      "ActionRequestDto": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean"
          },
          "hue": {
            "type": "number",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "nullable": true
          },
          "brightness": {
            "type": "number",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "nullable": true
          },
          "powerOnly": {
            "type": "boolean"
          },
          "macAddress": {
            "type": "string"
          }
        },
        "required": [
          "on",
          "powerOnly",
          "macAddress"
        ]
      },
      "CommandRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionRequestDto"
            }
          }
        },
        "required": [
          "name",
          "actions"
        ]
      },
      "ActionResponseDto": {
        "type": "object",
        "properties": {
          "on": {
            "type": "boolean"
          },
          "hue": {
            "type": "number",
            "nullable": true
          },
          "saturation": {
            "type": "number",
            "nullable": true
          },
          "brightness": {
            "type": "number",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "nullable": true
          },
          "powerOnly": {
            "type": "boolean"
          },
          "macAddress": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "commandId": {
            "type": "number"
          }
        },
        "required": [
          "on",
          "powerOnly",
          "macAddress",
          "id",
          "commandId"
        ]
      },
      "CommandResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionResponseDto"
            }
          },
          "id": {
            "type": "number"
          },
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "actions",
          "id",
          "hash"
        ]
      },
      "CommandsListResponseDto": {
        "type": "object",
        "properties": {
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandResponseDto"
            }
          }
        },
        "required": [
          "commands"
        ]
      }
    }
  }
}